import streamlit as st
import pickle
import numpy as np

# Charger le mod√®le et le scaler
model = pickle.load(open('random_forest_model.pkl', 'rb'))
scaler = pickle.load(open('scaler.pkl', 'rb'))

# Titre de l'application
st.title("üîç Pr√©diction d'annulation de r√©servation d'h√¥tel")

st.write("Veuillez saisir les informations suivantes :")

# Formulaire de saisie
lead_time = st.number_input("Lead Time", min_value=0)
stays_in_weekend_nights = st.number_input("Nuits en week-end", min_value=0)
stays_in_week_nights = st.number_input("Nuits en semaine", min_value=0)
adults = st.number_input("Nombre d'adultes", min_value=0)
children = st.number_input("Nombre d'enfants", min_value=0)
babies = st.number_input("Nombre de b√©b√©s", min_value=0)
adr = st.number_input("ADR (tarif moyen journalier)", min_value=0.0)
total_of_special_requests = st.number_input("Total des demandes sp√©ciales", min_value=0)

# Bouton pour faire une pr√©diction
if st.button("Pr√©dire"):
    features = [
        lead_time,
        stays_in_weekend_nights,
        stays_in_week_nights,
        adults,
        children,
        babies,
        adr,
        total_of_special_requests
    ]
    
    # Mise √† l'√©chelle
    features_scaled = scaler.transform([features])

    # Pr√©diction
    prediction = model.predict(features_scaled)[0]
    result = "‚ùå Annul√©e" if prediction == 1 else "‚úÖ Confirm√©e"
    
    st.subheader("R√©sultat de la pr√©diction :")
    st.success(result)
